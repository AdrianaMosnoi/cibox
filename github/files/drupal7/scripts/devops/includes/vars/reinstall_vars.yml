---
drupal_user: admin
drupal_pass: propeople
update_admin_user: true
installation_profile_name: pp
mysql_user: root
mysql_pass: root
mysql_db: drupal
cache_folder: /var/www/cache
backup_folder: /var/www/backup
tmp_folder: /tmp
php_env_vars: 'APP_ENV=dev' # APP_ENV=dev - this varible will be set at PR_BUILDER from CI shell executor.
site_url: 'http://drupal.192.168.56.132.xip.io/'
# Site url to download assets via stage_file_proxy.
origin_site_url: 'http://192.168.56.132.xip.io/'
# This variable will be used for variable_get('environment'). Can be overridden by CI server.
# development = 'default', demo = 'demo', staging = 'staging', production = 'production'.
pp_environment: 'default'
# This variable allows select type of installation. Can be overridden by CI server.
# From installation profile = 'profile', from sql dump = 'sql'.
workflow_type: 'profile'
is_windows: false
ci_server_username: 'jenkins'
# This variable allows make backup from CI environment before processing.
# true, false.
make_backup: false
rebuild_registry: false
# Local environment that will be used from backup.
local_backup_environment: 'staging'
# htpasswd protection for securing backups.
backup_user: propeople
backup_pass: givemebackup
# Source backup database that will be downloaded to build site.
# In many cases this is production dump.
source_backup_name: latest_prod.sql.gz
# URL to the source database. Can be overridden by CI server.
source_database: http://{{ backup_user }}:{{ backup_pass }}@192.168.56.132/backup/{{ source_backup_name }}

# Settings that will be added to settings.php file.
global:
  settings:
    - { name: '$conf["pp_environment"]', value: "{{ pp_environment }}" }
    - { name: '$conf["file_temporary_path"]', value: '{{ tmp_folder }}' }
    # Uncomment if you use MemCache.
    #- { name: '$conf["cache_default_class"]', value: "{{ pp_environment }}" }
    #- { name: '$conf["cache_backends"][]', value: 'sites/all/modules/contrib/memcache/memcache.inc' }
    #- { name: '$conf["cache_default_class"]', value: 'MemCacheDrupal' }
  modules: []
  drush_commands:
    - { name: 'cc', arguments: "all" }

# Specific settings and commands per environment.
default_env:
  settings:
    - { name: '$conf["stage_file_proxy_origin"]', value: "{{ origin_site_url }}" }
    - { name: '$conf["error_level"]', value: '2' }
    - { name: '$conf["cache"]', value: '0' }
    - { name: '$conf["block_cache"]', value: '0' }
    - { name: '$conf["preprocess_css"]', value: '0' }
    - { name: '$conf["preprocess_js"]', value: '0' }
  modules: []
  #  - stage_file_proxy
  #  - devel
  #  - views_ui
  #  - diff
  #  - dblog
  drush_commands: []

demo_env:
  settings:
    - { name: '$conf["stage_file_proxy_origin"]', value: "{{ origin_site_url }}" }
    - { name: '$conf["error_level"]', value: '0' }
  modules: []
  #  - stage_file_proxy
  #  - devel
  #  - views_ui
  #  - diff
  #  - dblog
  drush_commands: []
    #- { name: 'search-api-clear', arguments: "-l {{ site_url }}" }
    #- { name: 'search-api-index ', arguments: "-l {{ site_url }}" }
    #- { name: 'solr-mark-all', arguments: "-l {{ site_url }}" }
    #- { name: 'solr-index ', arguments: "-l {{ site_url }}" }

staging_env:
  settings: []
  modules: []
  drush_commands: []

production_env:
  settings: []
  modules: []
  drush_commands: []
